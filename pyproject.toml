[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "align-app"
version = "1.0.0"
description = "Web app showcasing an AI system designed to make decisions in scenarios where no single right answer exists."
authors = ["Paul Elliott"]
license = "Apache Software License"
readme = "README.md"
keywords = ["Python", "Interactive", "Web", "Application", "Framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "align_app"}]
include = [
    "align_app/**/*.js",
    "align_app/**/*.css",
]

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "supplemental"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
trame = ">=3.7.1"
trame-vuetify = "*"
trame-vtk = "*"
hydra-core = "*"
omegaconf = "*"
align-system = {git = "https://github.com/PaulHax/align-system.git", rev = "app"}

[tool.poetry.group.app.dependencies]
pywebview = "*"

[tool.poetry.group.jupyter.dependencies]
jupyterlab = "*"

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
ruff = "*"
pytest = "*"
mypy = "*"
types-PyYAML = "*"

[tool.poetry.scripts]
align-app = "align_app.app:main"

[tool.semantic_release]
version_variables = [
    "align_app/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version",
]
build_command = """
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip poetry
  poetry build
"""

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"
